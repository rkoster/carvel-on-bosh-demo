---
name: carvel-on-bosh-demo

instance_groups:
- name: server
  azs: ((azs))
  instances: 1
  vm_type: ((vm_type))
  persistent_disk_type: 102400
  stemcell: default
  networks: [{name: ((network))}]
  jobs:
  - { name: k3s-server,       release: k3s-wrapper }
  - { name: k3s-packages,     release: k3s-packages }
  - { name: registry-data,    release: registry-data }
  - { name: pre-start-script, release: os-conf }
  - { name: ca_certs,         release: os-conf }
  - name: registry
    release: docker-registry
    custom_provider_definitions:
    - name: registry
      type: address
      shared: true
    provides:
      registry:
        aliases:
        - domain: registry.bosh
          health_filter: all
        as: registry-address
  properties:
    certs: ((registry_tls.ca))
    k3s:
      token: ((k3s-token))
      additional-manifests:
      - |
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: coredns-custom
            namespace: kube-system
          data:
            forward.override: |
              forward registry.bosh 169.254.169.254
      - |
          apiVersion: packaging.carvel.dev/v1alpha1
          kind: PackageRepository
          metadata:
            name: carvel.garnier.wf
            namespace: app-ns
          spec:
            fetch:
              imgpkgBundle:
                # image: q-s0.server.((network)).carvel-on-bosh-demo.bosh:5000/repo@sha256:5fb39deab2298aac206549cd95d023c4095ccdbefcfc376c5486b6df48d2f000
                image: registry.bosh:5000/repo@sha256:5fb39deab2298aac206549cd95d023c4095ccdbefcfc376c5486b6df48d2f000
      - |
          apiVersion: v1
          kind: Namespace
          metadata:
            name: app-ns
      - |
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: cfday-pkgi-install-sa
            namespace: app-ns
      - |
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRole
          metadata:
            name: cfday-pkgi-install-role
          rules:
          - apiGroups:
            - '*'
            resources:
            - '*'
            verbs:
            - '*'

      - |
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: cfday-pkgi-install-binding
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: cfday-pkgi-install-role
          subjects:
          - kind: ServiceAccount
            name: cfday-pkgi-install-sa
            namespace: app-ns

      - |
          apiVersion: packaging.carvel.dev/v1alpha1
          kind: PackageInstall
          metadata:
            name: cfday-pkgi
            namespace: app-ns
          spec:
            packageRef:
              refName: carvel.garnier.wf
              versionSelection:
                constraints: 1.0.0
            serviceAccountName: cfday-pkgi-install-sa
            values:
            - secretRef:
                name: cfday-pkgi-values
      - |
          apiVersion: v1
          kind: Secret
          metadata:
            name: cfday-pkgi-values
            namespace: app-ns
          stringData:
            values.yaml: |
              channel: app-crd
              domains:
              - app-echo
              namespace: app-ns

    docker:
      registry:
        bind: 0.0.0.0
        port: 5000
        ssl:
          cert: ((registry_tls.certificate))
          key: ((registry_tls.private_key))
        root: /var/vcap/packages/registry-data

    script: |
      #!/bin/bash

      mkdir -p /var/vcap/store/k3s-server/server/manifests
      cat << EOF > /var/vcap/store/k3s-server/server/manifests/registry-ca.yaml
      ---
      apiVersion: v1
      kind: Secret
      metadata:
        name: kapp-controller-config
        namespace: kapp-controller
      stringData:
        caCerts: |
      EOF

      # Fix certificate indentation
      sed 's/^/    /g' >> /var/vcap/store/k3s-server/server/manifests/registry-ca.yaml  <<EOF
      ((registry_tls.ca))
      EOF

- name: worker
  azs: ((azs))
  instances: 1
  vm_type: ((vm_type))
  stemcell: default
  networks: [{name: ((network))}]
  jobs:
  - { name: k3s-agent,        release: k3s-wrapper }
  - { name: k3s-packages,     release: k3s-packages }
  - { name: ca_certs,         release: os-conf }
  properties:
    certs: ((registry_tls.ca))
    k3s:
      token: ((k3s-token))

variables:
- name: k3s-token
  type: password
- name: registry_ca
  type: certificate
  update_mode: converge
  options:
    common_name: ca
    is_ca: true
- name: registry_tls
  type: certificate
  update_mode: converge
  options:
    ca: registry_ca
    alternative_names:
    - localhost
    - registry.bosh
    common_name: registry-bosh
  consumes:
    alternative_name:
      from: registry-address

stemcells:
- alias: default
  os: ubuntu-jammy
  version: latest

update:
  canaries: 1
  canary_watch_time: 1000-60000
  update_watch_time: 1000-60000
  max_in_flight: 1
  serial: false

releases:
- name: k3s-wrapper
  version: 0.8.5
  url: https://github.com/orange-cloudfoundry/k3s-wrapper-boshrelease/releases/download/v0.8.5/k3s-wrapper-0.8.5.tgz
- name: k3s-packages
  version: 1.31.1+k3s1
  url: https://github.com/orange-cloudfoundry/k3s-packages-boshrelease/releases/download/1.31.1%2Bk3s1/k3s-packages-1.31.1+k3s1.tgz
- name:    docker-registry
  version: 3.6.0
  url:     https://github.com/cloudfoundry-community/docker-registry-boshrelease/releases/download/v3.6.0/docker-registry-3.6.0.tgz
  sha1:    2f09ca4f50c0129fdb8a7b84fe6d74b085c109c4
- name: os-conf
  version: 22.3.0
  url: https://bosh.io/d/github.com/cloudfoundry/os-conf-release?v=22.3.0
  sha1: 0f88a29315d8d9f900bb30a81c0eaf6d34a61639
- name: registry-data
  version: latest
